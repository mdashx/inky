- hosts: inky
  remote_user: vagrant
  become: yes
  become_user: root
  vars:
    user: 'tom'
  tasks:
    - name: test connection
      ping:
    - name: apt proxy hostname
      lineinfile: dest=/etc/hosts line="192.168.33.66 apt.mdashx.com"
    - name: pip proxy hostname
      lineinfile: dest=/etc/hosts line="192.168.33.66 pip.mdashx.com"
    - name: docker proxy/registry hostname
      lineinfile: dest=/etc/hosts line="192.168.33.66 docker.mdashx.com"
    - name: Use apt proxy
      copy: src=./02proxy dest=/etc/apt/apt.conf.d/02proxy
    - name: Install Aptitude because Ansible thinks it should be there
      command: apt -y install aptitude
    - name: add apt-keys (Emacs PPA)
      command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 062D648FD62FCE72
    - name: add apt-keys (Docker)
      command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    - name: add repositories (emacs, docker)
      apt_repository: repo={{ item }} state=present
      with_items:
        - 'deb http://ppa.launchpad.net/ubuntu-elisp/ppa/ubuntu xenial main'
        - 'deb http://apt.dockerproject.org/repo ubuntu-xenial main'
    - name: apt-get update and apt-get upgrade
      apt:  update_cache=yes upgrade=safe
    - name: Use UTF-8
      command: sudo update-locale LANG=en_US.UTF-8
    - name: Install packages (git, pip, nginx, emacs, etc.)
      apt:  name={{ item }} state=latest force=yes
      with_items:
        - git
        - python-pip
        - docker-engine
        - nginx
        - python-dev
        - libpq-dev
        - postgresql-client-common
        - postgresql-client
        - mysql-client
        - libmysqlclient-dev
        - emacs-snapshot
        - libxml2-dev
        - libxslt1-dev
        - tmux
        - sshpass
        - curl
        - wget
        - nmap
        - python-cffi-backend
        - python-paramiko
        - libffi-dev
        - python-psycopg2
    - name: Upgrade pip
      pip: name=pip state=latest
    - name: Install Python packages
      pip: name={{ item }}
      with_items:
        - virtualenv
        - virtualenvwrapper
        - cryptography
        - awscli
    - name: create user "{{ user }}"
      user: name="{{ user }}" generate_ssh_key=yes groups=docker,vagrant
    - name: install .bashrc
      become: yes
      become_user: "{{ user }}"
      copy: src=./bashrc.sh dest=/home/{{ user }}/.bashrc
    - name: symbolic links to synced directories
      file: src=/synced dest=/home/{{ user }}/work state=link
      become: yes
      become_user: "{{ user }}"
    - name: install Emacs config
      git:  repo=https://github.com/mdashx/myemacs.git dest=/home/{{ user }}/.emacs.d/
      become: yes
      become_user: "{{ user }}"
    - name: create bin dir
      file: path=/home/{{ user }}/bin state=directory
      become: yes
      become_user: "{{ user }}"
    - name: get mybin
      git:  repo=https://github.com/mdashx/mybin.git dest=/home/{{ user }}/mybin
      become: yes
      become_user: "{{ user }}"
    - name: install mybin
      shell: cd /home/{{ user }}/mybin && bash /home/{{ user }}/mybin/install.sh
      become: yes
      become_user: "{{ user }}"
    - name: rm mybin dir
      file: path=/home/{{ user }}/mybin state=absent
      become: yes
      become_user: "{{ user }}"
    - name: install gitconfig
      copy: src=./gitconfig dest=/home/{{ user }}/.gitconfig
    - name: install ssh config
      copy: src=./ssh-config dest=/home/{{ user }}/.ssh/config
    - copy: src=./install-lektor.sh dest=/home/{{ user }}/install-lektor.sh
    - name: Install Lektor
      shell: bash /home/{{ user }}/install-lektor.sh


    # gitconfig should use a template with vars
    # Install Ansible
